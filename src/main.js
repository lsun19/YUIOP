// LIYU SUN_CMPM 120
// YUI op.
// 30-40 HOURS
/* 
   CITATIONS:
        Music generated by Mubert https://mubert.com/render

        Play Music          : https://github.com/photonstorm/phaser3-examples/blob/master/public/src/audio/Web%20Audio/play%20audio%20file.js
        Menu&End Bitmap     : https://github.com/nathanaltice/Paddle-Parkour-P360
        FSM                 : https://github.com/nathanaltice/FSM
        "PressStart2P" Font : https://www.fontsc.com/font/press-start-2p
        Loading Bar         : https://rexrainbow.github.io/phaser3-rex-notes/docs/site/loader/

    
    Creative Tilt Justification:
        - Five functional keys, corresponding to the game's title YUI op., allow five distinctive character behaviors.
        - The application of finite state machine helps manage the character's behaviors/animations (e.g., idle, move, charge, guard).
        - Each run presents a unique challenge as enemies are randomly generated, providing dynamic gameplay.
        - Melee and Ranged Enemy Types add variation and challenges to the game.
        - Perfectly timed guards allow players to avoid collision damage and choose alternative paths.
        - Randomized enemy spawn points make it difficult for players to anticipate their actions.
        - The scoring system utilizes local storage to record the highest score achieved within the browser.
        - The dynamic difficulty progressively increases, adding more excitement and challenge as time goes on.

*/

'use strict';

let config =
{
    type    : Phaser.AUTO,
    width   : 1080,
    height  : 720,
    scale: 
    {
        autoCenter: Phaser.Scale.CENTER_BOTH
    },
    physics: 
    {
        default: 'arcade',
        arcade: 
        {
            debug: true,
            gravity: 
            {
                x: 0,
                y: 0
            }
        }
    },
    scene   : [ Load, Menu, Play, GG ] 
}

let game = new Phaser.Game(config);

// def globals for positioning
let centerX = game.config.width/2;
let centerY = game.config.height/2;
let wdth = game.config.width;
let hght = game.config.height;
let YcdEnd = true;
let UcdEnd = true;
let IcdEnd = true;
let OcdEnd = true;
let PcdEnd = true;
let guardpos = false;
let yokoHP = 3;
let enemyAcd = 2000;
let enemyBcd = 2000;
const textSpacer  = 64;
const paddingSize = 100;
const enemyAwdth = 200;
const enemyAhght = 150;
const enemyBwdth = 140;
const enemyBhght = 100;
const Ycd    = 1000;
const Ucd    = 10000;
const Icd    = 1000;
const Ocd    = 300;
const Pcd    = 500;


// def globals for functional var
let level;
let highScore;
let newHighScore = false;

// reserve keyboard variables
let keyW, keyA, keyS, keyD, keyY, keyU, keyI, keyO, keyP, keyF;